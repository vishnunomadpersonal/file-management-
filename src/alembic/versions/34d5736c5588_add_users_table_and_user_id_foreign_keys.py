"""Add users table and user_id foreign keys

Revision ID: 34d5736c5588
Revises: a7db9ccdcba8
Create Date: 2025-07-31 18:20:58.107333

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '34d5736c5588'
down_revision: Union[str, None] = 'a7db9ccdcba8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Create users table
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=True)
    
    # 2. Handle celery table only if it exists (skip since DB is clean)
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_tables = inspector.get_table_names()
    
    if 'celery_tasksetmeta' in existing_tables:
        op.drop_index('taskset_id', table_name='celery_tasksetmeta')
        op.drop_table('celery_tasksetmeta')
    
    # 3. Add user_id columns (non-nullable since DB is empty)
    op.add_column('appointments', sa.Column('user_id', sa.VARCHAR(length=36), nullable=False))
    op.add_column('files', sa.Column('user_id', sa.VARCHAR(length=36), nullable=False))
    
    # 4. Update appointments index (remove unique constraint for multi-user support)
    op.drop_index('ix_appointments_name', table_name='appointments')
    op.create_index(op.f('ix_appointments_name'), 'appointments', ['name'], unique=False)
    
    # 5. Add foreign key constraints
    op.create_foreign_key(None, 'appointments', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'files', 'users', ['user_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'files', type_='foreignkey')
    op.drop_column('files', 'user_id')
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.drop_index(op.f('ix_appointments_name'), table_name='appointments')
    op.create_index('ix_appointments_name', 'appointments', ['name'], unique=True)
    op.drop_column('appointments', 'user_id')
    op.create_table('celery_tasksetmeta',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('taskset_id', mysql.VARCHAR(length=155), nullable=True),
    sa.Column('result', sa.BLOB(), nullable=True),
    sa.Column('date_done', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('taskset_id', 'celery_tasksetmeta', ['taskset_id'], unique=True)
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
